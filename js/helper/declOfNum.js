// Функция declOfNum склоняет слово "пара" для всех возможных числительных в правильном склонении
// Принимает аргументы n - числительное и titles - массив всех вариантов склонения слова "пара" для них
export const declOfNum = (n, titles) => 
    // Возвращает число которое передали - 11 строка
    // Обращаемся к titles (набору наших слов) - 12 строка
    // Если число при делении на 10 оставляет остаток 1 (1, 21, 31, 191 и тд) и в то же время при делении на 100 оно не возвращает нам 11 (чтобы исключить такие числа как 11 пар, 111, 20111, 2911 пар, в общем все те что кончаются на 11, так как у этих чисел будет не "пара", а слово "пар") - 13 строка
    // В этом случае мы возврашаем 0 (то есть первый, нулевой элемент переданного массива слов во втором аргументе который мы передали в функцию - то есть подставится слово "пара") - 14 строка
    // Проверяем что наш "n", его остаток при делении на 10 будет больше или равен 2 и в то же время при делении на 10 будет меньше или равен 4, то есть остаток с 2 до 4 включительно (2 пары, 3 пары, 4, 22, 23, 24, 32, 143 пары и т.д.) а также при делении "n" на 100 остаток будет меньше 10 ИЛИ больше или равен 20, то есть бы убираем все значения от 10 до 19 (чтобы исключить 12 пар, 13, 14 пар, которые не подошли под первое условие) - 15 строка
    // В этом случае мы возврашаем 1 (то есть второй элемент переданного массива слов во втором аргументе который мы передали в функцию - то есть подставится слово "пары") - 16 строка
    // Во всех остальных случаях мы возвращаем 2 (то есть третий элемент переданного массива слов во втором аргументе который мы передали в функцию - то есть подставится слово "пар") - 17 строка
    `${n} 
    ${titles[
            n % 10 === 1 && n % 100 !== 11
                ? 0
                : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20)
                ? 1
                : 2
        ]
    }`;